# Generated by Django 3.2.4 on 2022-04-13 09:41

import datetime
import re

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "types",
                    models.CharField(
                        choices=[("DAILY", "日常任务"), ("ASSESSMENT", "考核任务")],
                        max_length=10,
                        verbose_name="项目类型",
                    ),
                ),
                ("course_id", models.IntegerField(verbose_name="项目所属课程id")),
                ("title", models.CharField(max_length=255, verbose_name="项目名称")),
                (
                    "master_teacher",
                    models.CharField(max_length=90, verbose_name="导师姓名"),
                ),
                ("master_teacher_id", models.IntegerField(verbose_name="导师id")),
                (
                    "question_order",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=200,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:\\,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                        verbose_name="存储题目顺序",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "start_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="开始时间"),
                ),
                (
                    "end_time",
                    models.DateTimeField(blank=True, null=True, verbose_name="截止时间"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "草稿"),
                            ("RELEASE", "已发布"),
                            ("MARKED", "已批阅"),
                        ],
                        max_length=10,
                        verbose_name="项目状态",
                    ),
                ),
                (
                    "judge_teachers_id",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=200,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:\\,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                        verbose_name="评委老师id",
                    ),
                ),
                (
                    "judge_teachers_weight",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=200,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:\\,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                        verbose_name="评委老师权重",
                    ),
                ),
                (
                    "project_students_id",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=200,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:\\,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                        verbose_name="学生id",
                    ),
                ),
                ("project_students_visible", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="StudentProjectInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student_id", models.BigIntegerField(verbose_name="用户id")),
                ("course_id", models.IntegerField(verbose_name="课程id")),
                ("project_id", models.IntegerField(verbose_name="项目id")),
                ("stu_answers", models.JSONField(verbose_name="学生提交答案")),
                ("individual_score", models.JSONField(verbose_name="学生题目单项得分")),
                (
                    "total_score",
                    models.FloatField(
                        blank=True, default=0, null=True, verbose_name="学生总体得分"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NOT_ANSWER", "未答题"),
                            ("SAVED", "已保存"),
                            ("SUBMITTED", "已提交"),
                            ("MARKED", "已批改"),
                        ],
                        max_length=10,
                        verbose_name="状态",
                    ),
                ),
                (
                    "cumulative_time",
                    models.DurationField(
                        default=datetime.timedelta(0), verbose_name="答题累计时间"
                    ),
                ),
            ],
        ),
    ]
